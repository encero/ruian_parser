// Code generated by entc, DO NOT EDIT.

package street

const (
	// Label holds the string label denoting the street type in the database.
	Label = "street"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeCities holds the string denoting the cities edge name in mutations.
	EdgeCities = "cities"
	// EdgeAdresses holds the string denoting the adresses edge name in mutations.
	EdgeAdresses = "adresses"
	// Table holds the table name of the street in the database.
	Table = "streets"
	// CitiesTable is the table that holds the cities relation/edge. The primary key declared below.
	CitiesTable = "street_cities"
	// CitiesInverseTable is the table name for the City entity.
	// It exists in this package in order to avoid circular dependency with the "city" package.
	CitiesInverseTable = "cities"
	// AdressesTable is the table that holds the adresses relation/edge. The primary key declared below.
	AdressesTable = "address_place_streets"
	// AdressesInverseTable is the table name for the AddressPlace entity.
	// It exists in this package in order to avoid circular dependency with the "addressplace" package.
	AdressesInverseTable = "address_places"
)

// Columns holds all SQL columns for street fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// CitiesPrimaryKey and CitiesColumn2 are the table columns denoting the
	// primary key for the cities relation (M2M).
	CitiesPrimaryKey = []string{"street_id", "city_id"}
	// AdressesPrimaryKey and AdressesColumn2 are the table columns denoting the
	// primary key for the adresses relation (M2M).
	AdressesPrimaryKey = []string{"address_place_id", "street_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
