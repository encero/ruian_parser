// Code generated by entc, DO NOT EDIT.

package addressplace

const (
	// Label holds the string label denoting the addressplace type in the database.
	Label = "address_place"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNumber holds the string denoting the number field in the database.
	FieldNumber = "number"
	// FieldOrientationNumber holds the string denoting the orientation_number field in the database.
	FieldOrientationNumber = "orientation_number"
	// FieldOrientationNumberLetter holds the string denoting the orientation_number_letter field in the database.
	FieldOrientationNumberLetter = "orientation_number_letter"
	// FieldZip holds the string denoting the zip field in the database.
	FieldZip = "zip"
	// EdgeStreets holds the string denoting the streets edge name in mutations.
	EdgeStreets = "streets"
	// Table holds the table name of the addressplace in the database.
	Table = "address_places"
	// StreetsTable is the table that holds the streets relation/edge. The primary key declared below.
	StreetsTable = "address_place_streets"
	// StreetsInverseTable is the table name for the Street entity.
	// It exists in this package in order to avoid circular dependency with the "street" package.
	StreetsInverseTable = "streets"
)

// Columns holds all SQL columns for addressplace fields.
var Columns = []string{
	FieldID,
	FieldNumber,
	FieldOrientationNumber,
	FieldOrientationNumberLetter,
	FieldZip,
}

var (
	// StreetsPrimaryKey and StreetsColumn2 are the table columns denoting the
	// primary key for the streets relation (M2M).
	StreetsPrimaryKey = []string{"address_place_id", "street_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
