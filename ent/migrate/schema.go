// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AddressPlacesColumns holds the columns for the "address_places" table.
	AddressPlacesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "number", Type: field.TypeInt32},
		{Name: "orientation_number", Type: field.TypeInt32, Nullable: true},
		{Name: "orientation_number_letter", Type: field.TypeString, Nullable: true},
		{Name: "zip", Type: field.TypeInt32},
	}
	// AddressPlacesTable holds the schema information for the "address_places" table.
	AddressPlacesTable = &schema.Table{
		Name:       "address_places",
		Columns:    AddressPlacesColumns,
		PrimaryKey: []*schema.Column{AddressPlacesColumns[0]},
	}
	// CitiesColumns holds the columns for the "cities" table.
	CitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// CitiesTable holds the schema information for the "cities" table.
	CitiesTable = &schema.Table{
		Name:       "cities",
		Columns:    CitiesColumns,
		PrimaryKey: []*schema.Column{CitiesColumns[0]},
	}
	// StreetsColumns holds the columns for the "streets" table.
	StreetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt32, Increment: true},
		{Name: "name", Type: field.TypeString},
	}
	// StreetsTable holds the schema information for the "streets" table.
	StreetsTable = &schema.Table{
		Name:       "streets",
		Columns:    StreetsColumns,
		PrimaryKey: []*schema.Column{StreetsColumns[0]},
	}
	// AddressPlaceStreetsColumns holds the columns for the "address_place_streets" table.
	AddressPlaceStreetsColumns = []*schema.Column{
		{Name: "address_place_id", Type: field.TypeInt32},
		{Name: "street_id", Type: field.TypeInt32},
	}
	// AddressPlaceStreetsTable holds the schema information for the "address_place_streets" table.
	AddressPlaceStreetsTable = &schema.Table{
		Name:       "address_place_streets",
		Columns:    AddressPlaceStreetsColumns,
		PrimaryKey: []*schema.Column{AddressPlaceStreetsColumns[0], AddressPlaceStreetsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "address_place_streets_address_place_id",
				Columns:    []*schema.Column{AddressPlaceStreetsColumns[0]},
				RefColumns: []*schema.Column{AddressPlacesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "address_place_streets_street_id",
				Columns:    []*schema.Column{AddressPlaceStreetsColumns[1]},
				RefColumns: []*schema.Column{StreetsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// StreetCitiesColumns holds the columns for the "street_cities" table.
	StreetCitiesColumns = []*schema.Column{
		{Name: "street_id", Type: field.TypeInt32},
		{Name: "city_id", Type: field.TypeInt32},
	}
	// StreetCitiesTable holds the schema information for the "street_cities" table.
	StreetCitiesTable = &schema.Table{
		Name:       "street_cities",
		Columns:    StreetCitiesColumns,
		PrimaryKey: []*schema.Column{StreetCitiesColumns[0], StreetCitiesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "street_cities_street_id",
				Columns:    []*schema.Column{StreetCitiesColumns[0]},
				RefColumns: []*schema.Column{StreetsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "street_cities_city_id",
				Columns:    []*schema.Column{StreetCitiesColumns[1]},
				RefColumns: []*schema.Column{CitiesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AddressPlacesTable,
		CitiesTable,
		StreetsTable,
		AddressPlaceStreetsTable,
		StreetCitiesTable,
	}
)

func init() {
	AddressPlaceStreetsTable.ForeignKeys[0].RefTable = AddressPlacesTable
	AddressPlaceStreetsTable.ForeignKeys[1].RefTable = StreetsTable
	StreetCitiesTable.ForeignKeys[0].RefTable = StreetsTable
	StreetCitiesTable.ForeignKeys[1].RefTable = CitiesTable
}
